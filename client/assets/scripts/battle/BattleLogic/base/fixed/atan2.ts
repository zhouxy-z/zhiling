import { Mathf } from "../../../../utils/Mathf";

const ATAN2_TABLE_SIZE = 720;

const atan2Table = [
  90.00000,  89.92042,  89.84084,  89.76127,  89.68169,  89.60211,  89.52253,  89.44295,  89.36337,  89.28378,  89.20420,  89.12461,  89.04503,  88.96544,  88.88585,  88.80625,  88.72666,  88.64706,  88.56746,  88.48785,  88.40825,  88.32864,  88.24902,  88.16941,  88.08979,  88.01016,  87.93054,  87.85090,  87.77127,  87.69163,  87.61198,  87.53234,  87.45268,  87.37302,  87.29336,  87.21369,  87.13402,  87.05434,  86.97465,  86.89496,  86.81526,  86.73556,  86.65585,  86.57613,  86.49641,  86.41668,  86.33694,  86.25720,  86.17745,  86.09769,  86.01792,  85.93815,  85.85837,  85.77858,  85.69878,  85.61897,  85.53916,  85.45933,  85.37950,  85.29966,  85.21981,  85.13995,  85.06008,  84.98020,  84.90031,  84.82041,  84.74050,  84.66058,  84.58065,  84.50071,  84.42076,  84.34080,  84.26083,  84.18085,  84.10085,  84.02084,  83.94082,  83.86079,  83.78075,  83.70070,  83.62063,  83.54055,  83.46046,  83.38035,  83.30023,  83.22010,  83.13996,  83.05980,  82.97963,  82.89944,  82.81924,  82.73903,  82.65880,  82.57856,  82.49830,  82.41803,  82.33774,  82.25744,  82.17713,  82.09679,  82.01644,  81.93608,  81.85570,  81.77530,  81.69489,  81.61446,  81.53402,  81.45355,  81.37307,  81.29258,  81.21206,  81.13153,  81.05098,  80.97041,  80.88983,  80.80923,  80.72861,  80.64796,  80.56731,  80.48663,  80.40593,  80.32522,  80.24448,  80.16373,  80.08295,  80.00216,  79.92134,  79.84051,  79.75965,  79.67878,  79.59788,  79.51696,  79.43602,  79.35506,  79.27408,  79.19308,  79.11205,  79.03100,  78.94994,  78.86884,  78.78773,  78.70659,  78.62543,  78.54425,  78.46304,  78.38181,  78.30056,  78.21928,  78.13798,  78.05665,  77.97530,  77.89393,  77.81253,  77.73110,  77.64965,  77.56818,  77.48667,  77.40515,  77.32360,  77.24202,  77.16041,  77.07878,  76.99712,  76.91544,  76.83372,  76.75199,  76.67022,  76.58842,  76.50660,  76.42475,  76.34287,  76.26096,  76.17903,  76.09706,  76.01507,  75.93305,  75.85100,  75.76891,  75.68680,  75.60466,  75.52249,  75.44029,  75.35805,  75.27579,  75.19349,  75.11117,  75.02881,  74.94642,  74.86400,  74.78154,  74.69906,  74.61654,  74.53399,  74.45141,  74.36879,  74.28614,  74.20346,  74.12074,  74.03799,  73.95520,  73.87238,  73.78952,  73.70664,  73.62371,  73.54075,  73.45775,  73.37472,  73.29166,  73.20855,  73.12541,  73.04224,  72.95902,  72.87577,  72.79249,  72.70916,  72.62580,  72.54240,  72.45896,  72.37548,  72.29196,  72.20841,  72.12482,  72.04118,  71.95751,  71.87380,  71.79004,  71.70625,  71.62242,  71.53854,  71.45463,  71.37067,  71.28667,  71.20263,  71.11855,  71.03443,  70.95026,  70.86605,  70.78180,  70.69750,  70.61316,  70.52878,  70.44435,  70.35988,  70.27537,  70.19081,  70.10620,  70.02155,  69.93686,  69.85211,  69.76733,  69.68249,  69.59761,  69.51268,  69.42771,  69.34269,  69.25762,  69.17250,  69.08734,  69.00212,  68.91686,  68.83155,  68.74619,  68.66078,  68.57532,  68.48981,  68.40425,  68.31864,  68.23298,  68.14727,  68.06150,  67.97569,  67.88982,  67.80390,  67.71793,  67.63190,  67.54582,  67.45969,  67.37350,  67.28726,  67.20097,  67.11462,  67.02822,  66.94176,  66.85524,  66.76867,  66.68204,  66.59536,  66.50862,  66.42182,  66.33497,  66.24805,  66.16108,  66.07405,  65.98697,  65.89982,  65.81261,  65.72535,  65.63802,  65.55064,  65.46319,  65.37568,  65.28811,  65.20048,  65.11279,  65.02503,  64.93722,  64.84934,  64.76139,  64.67339,  64.58531,  64.49718,  64.40898,  64.32071,  64.23238,  64.14398,  64.05552,  63.96699,  63.87839,  63.78973,  63.70100,  63.61220,  63.52333,  63.43440,  63.34539,  63.25632,  63.16717,  63.07796,  62.98867,  62.89931,  62.80989,  62.72039,  62.63082,  62.54117,  62.45145,  62.36166,  62.27180,  62.18186,  62.09185,  62.00176,  61.91160,  61.82136,  61.73104,  61.64065,  61.55018,  61.45963,  61.36901,  61.27831,  61.18753,  61.09667,  61.00573,  60.91470,  60.82360,  60.73242,  60.64116,  60.54981,  60.45839,  60.36688,  60.27528,  60.18361,  60.09185,  60.00000,  59.90807,  59.81605,  59.72395,  59.63176,  59.53949,  59.44712,  59.35467,  59.26213,  59.16950,  59.07678,  58.98398,  58.89108,  58.79809,  58.70501,  58.61183,  58.51857,  58.42521,  58.33176,  58.23821,  58.14457,  58.05083,  57.95700,  57.86307,  57.76905,  57.67492,  57.58070,  57.48639,  57.39197,  57.29745,  57.20283,  57.10811,  57.01329,  56.91837,  56.82335,  56.72822,  56.63299,  56.53765,  56.44221,  56.34666,  56.25101,  56.15525,  56.05939,  55.96341,  55.86733,  55.77113,  55.67483,  55.57842,  55.48189,  55.38526,  55.28851,  55.19164,  55.09467,  54.99757,  54.90037,  54.80304,  54.70561,  54.60805,  54.51037,  54.41258,  54.31467,  54.21663,  54.11848,  54.02020,  53.92180,  53.82328,  53.72463,  53.62586,  53.52696,  53.42794,  53.32879,  53.22951,  53.13010,  53.03057,  52.93090,  52.83110,  52.73117,  52.63111,  52.53091,  52.43058,  52.33011,  52.22951,  52.12877,  52.02789,  51.92688,  51.82572,  51.72442,  51.62299,  51.52140,  51.41968,  51.31781,  51.21580,  51.11364,  51.01133,  50.90888,  50.80627,  50.70352,  50.60061,  50.49756,  50.39435,  50.29098,  50.18746,  50.08379,  49.97996,  49.87597,  49.77182,  49.66750,  49.56303,  49.45840,  49.35360,  49.24864,  49.14351,  49.03821,  48.93275,  48.82711,  48.72131,  48.61533,  48.50918,  48.40286,  48.29636,  48.18969,  48.08283,  47.97580,  47.86859,  47.76119,  47.65361,  47.54585,  47.43790,  47.32977,  47.22144,  47.11293,  47.00422,  46.89533,  46.78623,  46.67695,  46.56746,  46.45778,  46.34790,  46.23781,  46.12753,  46.01704,  45.90634,  45.79543,  45.68432,  45.57300,  45.46146,  45.34971,  45.23774,  45.12556,  45.01315,  44.90053,  44.78768,  44.67461,  44.56131,  44.44779,  44.33403,  44.22004,  44.10582,  43.99137,  43.87668,  43.76174,  43.64657,  43.53115,  43.41549,  43.29958,  43.18342,  43.06701,  42.95035,  42.83343,  42.71625,  42.59881,  42.48111,  42.36315,  42.24492,  42.12642,  42.00764,  41.88860,  41.76927,  41.64967,  41.52979,  41.40962,  41.28917,  41.16843,  41.04739,  40.92606,  40.80444,  40.68251,  40.56028,  40.43775,  40.31491,  40.19176,  40.06829,  39.94451,  39.82040,  39.69597,  39.57122,  39.44614,  39.32072,  39.19497,  39.06888,  38.94244,  38.81566,  38.68853,  38.56105,  38.43321,  38.30501,  38.17644,  38.04751,  37.91820,  37.78852,  37.65846,  37.52802,  37.39719,  37.26596,  37.13434,  37.00232,  36.86990,  36.73706,  36.60381,  36.47015,  36.33606,  36.20154,  36.06659,  35.93120,  35.79537,  35.65909,  35.52235,  35.38516,  35.24751,  35.10938,  34.97078,  34.83170,  34.69213,  34.55207,  34.41151,  34.27044,  34.12887,  33.98677,  33.84415,  33.70100,  33.55731,  33.41307,  33.26829,  33.12294,  32.97703,  32.83054,  32.68346,  32.53580,  32.38754,  32.23867,  32.08918,  31.93907,  31.78833,  31.63694,  31.48491,  31.33221,  31.17884,  31.02478,  30.87004,  30.71459,  30.55843,  30.40155,  30.24393,  30.08556,  29.92643,  29.76654,  29.60586,  29.44438,  29.28209,  29.11898,  28.95502,  28.79022,  28.62455,  28.45800,  28.29055,  28.12218,  27.95289,  27.78264,  27.61143,  27.43924,  27.26604,  27.09183,  26.91657,  26.74025,  26.56284,  26.38433,  26.20469,  26.02390,  25.84193,  25.65876,  25.47437,  25.28872,  25.10179,  24.91355,  24.72396,  24.53301,  24.34065,  24.14685,  23.95158,  23.75479,  23.55646,  23.35655,  23.15500,  22.95178,  22.74685,  22.54015,  22.33165,  22.12127,  21.90898,  21.69472,  21.47842,  21.26002,  21.03947,  20.81669,  20.59160,  20.36413,  20.13421,  19.90174,  19.66664,  19.42880,  19.18814,  18.94453,  18.69787,  18.44802,  18.19487,  17.93827,  17.67807,  17.41411,  17.14621,  16.87419,  16.59784,  16.31695,  16.03127,  15.74055,  15.44449,  15.14280,  14.83511,  14.52106,  14.20021,  13.87210,  13.53620,  13.19192,  12.83857,  12.47539,  12.10149,  11.71585,  11.31727,  10.90432,  10.47531,  10.02818,  9.56038,  9.06872,  8.54908,  7.99600,  7.40200,  6.75629,  6.04231,  5.23218,  4.27156,  3.02010,  0.00000,
];

const ATAN2_TABLE_STEP = 1 / ATAN2_TABLE_SIZE;

export function customAtan2(y, x) {
  const xAbs = Math.abs(x);
  const index = Math.round(Mathf.parseNumber(xAbs * ATAN2_TABLE_SIZE));
  let angle = atan2Table[index];

  // 调整角度，基于 x 和 y 的符号
  if (x < 0) {
    if (y >= 0) {
      angle = 180 - angle;
    } else {
      angle = -180 + angle;
    }
  } else {
    if (y < 0) 
      angle = -angle;
  }

  return angle;
}
